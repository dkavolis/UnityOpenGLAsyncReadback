name: Test and Build

on: [push, pull_request, workflow_dispatch]

jobs:
  test_and_build:
    name: Test and build ${{ matrix.platform.os }}-${{ matrix.buildType }}
    runs-on: ${{ matrix.platform.os }}
    env:
      cacheVersion: 1
    strategy:
      fail-fast: false
      matrix:
        unityVersion: ["2019.4.18f1"]
        projectPath:
          - UnityPlugin
        platform:
          - os: windows-latest
            cxx: cl
            cc: cl
          - os: ubuntu-latest
            cxx: g++-11
            cc: gcc-11
            install: sudo apt-get install freeglut3-dev g++-11 gcc-11
          - os: macos-latest
            cxx: clang++
            cc: clang
        buildType: [Debug, Release]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.platform.os }}-${{ matrix.unityVersion }}-${{ env.cacheVersion }}

      - uses: lukka/get-cmake@latest

      - name: Install dependencies
        run: |
          ${{ matrix.platform.install }}

      - uses: ilammy/msvc-dev-cmd@v1
        if: contains(matrix.platform.os, 'windows')

      - name: Build with CMake
        uses: ashutoshvarma/action-cmake-build@ade188313bc7eaa6f14349569a64d8bc716342ff
        with:
          source-dir: ${{ github.workspace}}/NativePlugin
          build-dir: ${{ runner.workspace }}/build
          cc: ${{ matrix.platform.cc }}
          cxx: ${{ matrix.platform.cxx }}
          configure-options: -G Ninja
          build-type: ${{ matrix.buildType }}

      # windows is broken and linux refuses to load the native plugin...
      # - uses: game-ci/unity-test-runner@e8774f3837cabcdd6f5ffc39227af382c1f93021
      #   if: contains(matrix.platform.os, 'windows')
      #   env:
      #     UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #   with:
      #     unityVersion: ${{ matrix.unityVersion }}
      #     projectPath: ${{ matrix.projectPath }}
      #     testMode: playmode
      #     githubToken: ${{ secrets.GITHUB_TOKEN }}
      #     customParameters: -force-glcore

      - uses: game-ci/unity-builder@47b25cf3b1606ac8b31d43de58ed936dbe792417
        #  only building on one platform as the managed plugins are platform agnostic
        if: contains(matrix.platform.os, 'ubuntu')
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          projectPath: ${{ matrix.projectPath }}
          targetPlatform: StandaloneLinux64
          buildMethod: UniversalAsyncGPUReadbackPlugin.Editor.Builder.Build
          buildName: player
          buildsPath: ${{ github.workspace }}/bin
          customParameters: -buildType ${{ matrix.buildType }}
          allowDirtyBuild: true

      - name: Copy managed plugin to bin
        if: contains(matrix.platform.os, 'ubuntu')
        run: |
          sudo apt install tree
          tree ${{ github.workspace }}/bin
          cp bin/player/*/Managed/*GPU* bin -u

      - uses: actions/upload-artifact@v2
        with:
          name: UniversalAsyncGPUPlugin-${{ matrix.buildType }}
          path: |
            bin/*.dll
            bin/*.pdb
            bin/*.so
            bin/*.dylib
